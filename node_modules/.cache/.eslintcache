[{"/home/fdezdev/FdezDev/MonitoringTools/src/index.js":"1","/home/fdezdev/FdezDev/MonitoringTools/src/reportWebVitals.js":"2","/home/fdezdev/FdezDev/MonitoringTools/src/page/Home.jsx":"3","/home/fdezdev/FdezDev/MonitoringTools/src/components/App.jsx":"4","/home/fdezdev/FdezDev/MonitoringTools/src/components/Index.jsx":"5","/home/fdezdev/FdezDev/MonitoringTools/src/components/NotFound.jsx":"6","/home/fdezdev/FdezDev/MonitoringTools/src/firebase.js":"7","/home/fdezdev/FdezDev/MonitoringTools/src/components/TelegramWidget.jsx":"8","/home/fdezdev/FdezDev/MonitoringTools/src/components/Login.jsx":"9","/home/fdezdev/FdezDev/MonitoringTools/src/components/Signup.jsx":"10","/home/fdezdev/FdezDev/MonitoringTools/src/components/Recoverpass.jsx":"11"},{"size":543,"mtime":1684865884040,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1684865884040,"results":"14","hashOfConfig":"13"},{"size":218,"mtime":1684865884040,"results":"15","hashOfConfig":"13"},{"size":685,"mtime":1684872679364,"results":"16","hashOfConfig":"13"},{"size":11958,"mtime":1684903813277,"results":"17","hashOfConfig":"13"},{"size":413,"mtime":1684865884040,"results":"18","hashOfConfig":"13"},{"size":755,"mtime":1684865884040,"results":"19","hashOfConfig":"13"},{"size":369,"mtime":1684867268880,"results":"20","hashOfConfig":"13"},{"size":4041,"mtime":1684872530125,"results":"21","hashOfConfig":"13"},{"size":4531,"mtime":1684872607435,"results":"22","hashOfConfig":"13"},{"size":2331,"mtime":1684865884040,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nyoapf",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/fdezdev/FdezDev/MonitoringTools/src/index.js",[],[],"/home/fdezdev/FdezDev/MonitoringTools/src/reportWebVitals.js",[],[],"/home/fdezdev/FdezDev/MonitoringTools/src/page/Home.jsx",[],[],"/home/fdezdev/FdezDev/MonitoringTools/src/components/App.jsx",[],[],"/home/fdezdev/FdezDev/MonitoringTools/src/components/Index.jsx",["59","60","61"],[],"import React, { useState, useEffect } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport { app } from '../firebase.js';\nimport TelegramWidget from './TelegramWidget';\n\nfunction Index() {\n\n    const [userEmail, setUserEmail] = useState('');\n\n    useEffect(() => {\n        const auth = getAuth();\n\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\n            if (user) {\n                // El usuario ha iniciado sesión\n                setUserEmail(user.email);\n            } else {\n                // El usuario no ha iniciado sesión\n                setUserEmail('');\n            }\n        });\n\n        // Limpia el listener cuando el componente se desmonta\n        return () => unsubscribe();\n    }, []);\n\n    const handleLogout = () => {\n        const auth = getAuth();\n        auth.signOut().then(() => {\n            // Redirige al usuario a la página de inicio de sesión o a donde prefieras\n            window.location.href = \"/\";\n        }).catch((error) => {\n            // Manejo de errores en caso de que ocurra alguno durante el deslogueo\n            console.log(error);\n        });\n    };\n\n\n\n\n\n    //parte de las card\n\n    const [data1, setData1] = useState([]);\n\n    useEffect(() => {\n        const db = getDatabase(app);\n        const dataRef = ref(db, 'sensortime'); // Ajusta la ruta según sea necesario\n\n        // Leemos los datos de Firebase\n        onValue(dataRef, (snapshot) => {\n            // Actualizamos el estado con los nuevos datos\n            setData1(snapshot.val());\n        });\n    }, []);\n\n\n\n    const [data2, setData2] = useState({});\n    const [error, setError] = useState('');\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n\n        const searchDate = event.target.elements.searchDate.value;\n\n        const db = getDatabase(app);\n        const dataRef = ref(db, `sensorfecha/${searchDate}`);\n\n        onValue(dataRef, (snapshot) => {\n            const snapshotValue = snapshot.val();\n            if (snapshotValue) {\n                setData2(snapshotValue);\n                setError('');\n            } else {\n                setData2({});\n                setError('No se encontraron datos para la fecha seleccionada');\n            }\n        });\n    };\n\n\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        const db = getDatabase();\n        const dataRef = ref(db, 'sensortime');\n\n        onValue(dataRef, (snapshot) => {\n            const newData = snapshot.val();\n            const newDataPoint = {\n                temperature: parseFloat(newData.temperature),\n                humidity: parseFloat(newData.humidity),\n                voltage: parseFloat(newData.voltage),\n                time: newData.time\n            };\n            setData(prevData => [...prevData, newDataPoint]);\n        });\n    }, []);\n\n    const temperatureOptions = {\n        title: {\n            text: 'Temperature'\n        },\n        xAxis: {\n            categories: data.map((item, index) => index)\n        },\n        series: [\n            {\n                name: 'Temperature',\n                data: data.map(item => item.temperature)\n            }\n        ],\n    };\n\n    const humidityOptions = {\n        title: {\n            text: 'Humidity'\n        },\n        xAxis: {\n            categories: data.map((item, index) => index)\n        },\n        series: [\n            {\n                name: 'Humidity',\n                data: data.map(item => item.humidity)\n            }\n        ],\n    };\n\n    const voltageOptions = {\n        title: {\n            text: 'Voltage'\n        },\n        xAxis: {\n            categories: data.map((item, index) => index)\n        },\n        series: [\n            {\n                name: 'Voltage',\n                data: data.map(item => item.voltage)\n            }\n        ],\n    };\n\n\n\n\n\n\n    return (\n        <div class=\"container-xxl w-100 mt-5 d-lg-block col-md-5 col-lg-7 col-xl-6 bg-light rounder shadow\">\n            <div class=\"container-xxl w-100 mt-5 d-lg-block col-md-5 col-lg-7 col-xl-6 bg-light rounder shadow\">\n                <nav class=\"navbar navbar-ligh bg-light\">\n                    <div class=\"container-fluid\">\n                        <a class=\"navbar-brand text-primary\" href=\"#\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"24\" fill=\"currentColor\" class=\"bi bi-code-slash\" viewBox=\"0 0 16 16\">\n                                <path d=\"M10.478 1.647a.5.5 0 1 0-.956-.294l-4 13a.5.5 0 0 0 .956.294l4-13zM4.854 4.146a.5.5 0 0 1 0 .708L1.707 8l3.147 3.146a.5.5 0 0 1-.708.708l-3.5-3.5a.5.5 0 0 1 0-.708l3.5-3.5a.5.5 0 0 1 .708 0zm6.292 0a.5.5 0 0 0 0 .708L14.293 8l-3.147 3.146a.5.5 0 0 0 .708.708l3.5-3.5a.5.5 0 0 0 0-.708l-3.5-3.5a.5.5 0 0 0-.708 0z\" />\n                            </svg>\n                            Fdez <small className=\"text-black\">Dev</small>\n                        </a>\n                        <a class=\"navbar-brand text-primary\" href=\"#\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"24\" fill=\"currentColor\" class=\"bi bi-clock\" viewBox=\"0 0 16 16\">\n                                <path d=\"M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z\" />\n                                <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z\" />\n                            </svg>\n                            <small className=\"text-black\"> {data1.time}</small>\n                        </a>\n                        <div className=\"dropdown\">\n                            <button className=\"btn btn-outline-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"24\" fill=\"currentColor\" className=\"bi bi-person\" viewBox=\"0 0 16 16\">\n                                    <path d=\"M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\" />\n                                </svg>\n                                {userEmail}\n                            </button>\n                            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n                                <li><button className=\"dropdown-item\" onClick={handleLogout}><i class=\"bi bi-box-arrow-right\"></i> Cerrar Sesión</button></li>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n            <div class=\"container-xxl w-100 mt-5 d-lg-block col-md-5 col-lg-7 col-xl-6 bg-light rounder shadow\">\n                <div class=\"row align-items-center\">\n                    <div class=\"col\">\n                        <div class=\"card bg-info\" >\n                            <div class=\"card-body\">\n                                <h5 class=\"card-title\">Temperatura</h5>\n                                <h1><i class=\"bi bi-thermometer-snow\">{data1.temperature}</i> 'C</h1>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col\">\n                        <div class=\"card\">\n                            <div class=\"card-body bg-danger\">\n                                <h5 class=\"card-title\">Humedad</h5>\n                                <h1><i class=\"bi bi-droplet-half\">{data1.humidity}</i> %</h1>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col\">\n                        <div class=\"card\">\n                            <div class=\"card-body bg-warning\">\n                                <h5 class=\"card-title\">Voltage</h5>\n                                <h1><i class=\"bi bi-lightning-charge-fill\">{data1.voltage}</i> Volt</h1>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"container-xxl w-100 mt-5 d-lg-block col-md-5 col-lg-7 col-xl-6 bg-light rounder shadow\">\n                <nav class=\"navbar navbar-light bg-light\">\n                    <div class=\"container-fluid\">\n                        <a class=\"navbar-brand\"><TelegramWidget /></a>\n                        {error && <p>{error}</p>}\n                        <form onSubmit={handleFormSubmit}>\n                            <input type=\"date\" name=\"searchDate\" />\n                            <button class=\"btn btn-outline-success\" type=\"submit\"><i class=\"bi bi-search\"></i> Buscar</button>\n                        </form>\n\n                    </div>\n                </nav>\n            </div>\n            <div class=\"container-xxl w-100 mt-5 d-lg-block col-md-5 col-lg-7 col-xl-6 bg-light rounder shadow\">\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Temperatura</th>\n                            <th scope=\"col\">Humedad</th>\n                            <th scope=\"col\">Voltage</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Object.entries(data2).map(([time, data]) => (\n                            <tr key={time}>\n                                <th scope=\"row\">{data.time}</th>\n                                <td class=\"table-primary\">{data.temperature}</td>\n                                <td class=\"table-danger\">{data.humidity}</td>\n                                <td class=\"table-warning\">{data.voltage}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n\n            </div>\n            <div class=\"container-xxl w-100 mt-5 d-lg-block col-md-5 col-lg-7 col-xl-6 bg-light rounder shadow\">\n                <div class=\"row align-items-center\">\n                    <div class=\"col\">\n                        <div class=\"card\" >\n                            <div class=\"card-body bg-info\">\n                                <h5 class=\"card-title\">Temperatura <i class=\"bi bi-thermometer-snow\"></i></h5>\n                                <HighchartsReact\n                                    highcharts={Highcharts}\n                                    options={temperatureOptions}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col\">\n                        <div class=\"card\">\n                            <div class=\"card-body bg-danger\">\n                                <h5 class=\"card-title\">Humedad <i class=\"bi bi-droplet-half\"></i></h5>\n                                <HighchartsReact\n                                    highcharts={Highcharts}\n                                    options={humidityOptions}\n                                />\n\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col\">\n                        <div class=\"card\">\n                            <div class=\"card-body bg-warning\">\n                                <h5 class=\"card-title\">Voltage <i class=\"bi bi-lightning-charge-fill\"></i></h5>\n                                <HighchartsReact\n                                    highcharts={Highcharts}\n                                    options={voltageOptions}\n                                />\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Index;","/home/fdezdev/FdezDev/MonitoringTools/src/components/NotFound.jsx",[],[],"/home/fdezdev/FdezDev/MonitoringTools/src/firebase.js",[],[],"/home/fdezdev/FdezDev/MonitoringTools/src/components/TelegramWidget.jsx",[],[],[],"/home/fdezdev/FdezDev/MonitoringTools/src/components/Login.jsx",[],[],"/home/fdezdev/FdezDev/MonitoringTools/src/components/Signup.jsx",[],[],"/home/fdezdev/FdezDev/MonitoringTools/src/components/Recoverpass.jsx",[],[],{"ruleId":"62","severity":1,"message":"63","line":159,"column":25,"nodeType":"64","endLine":159,"endColumn":71},{"ruleId":"62","severity":1,"message":"63","line":165,"column":25,"nodeType":"64","endLine":165,"endColumn":71},{"ruleId":"62","severity":1,"message":"65","line":217,"column":25,"nodeType":"64","endLine":217,"endColumn":49},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]